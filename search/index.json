[{"content":"了解服务端文件架构 注:群组服会单独拉出来讲.\n服务器结构(带\u0026quot;·\u0026ldquo;文件非构建必须):\n1 2 3 4 5 6 7 8 9 └── /server ├── .server core(名字一般为核心名如.fabric .mohist等) ├──library(资源文件,此文件特殊,一般启动的时候会下载) ├──config(配置文件) ├──log(日志文件) ├──world(存档文件夹) ├──eula(用户协议:一般生成后需要把内容改为eula:true) ├──server.properties.Properties(服务器配置文件，其他核心会有bukkit spigot) └──server.jar(服务核心文件,要是没这个就别玩了孩子) 构建服务器 1.首先从服务器核心获取: 纯净端: Minecraft: https://mcversions.net/\n插件端: Paper: https://papermc.io/downloads/all\nPurpur: https://purpurmc.org/download/purpur/\nLeaves: https://leavesmc.org/downloads/leaves\nLeaf: https://www.leafmc.one/zh/download\nPandaSpigot: https://nightly.link/hpfxd/PandaSpigot/workflows/build/master/Server%20JAR.zip\nSportPaper: https://github.com/Electroid/SportPaper\nCraftBukkit: https://getbukkit.org/download/craftbukkit\nSpigot: https://getbukkit.org/download/spigot/\n模组端(我们师徒三人): Fabric: https://fabricmc.net/\nForge: https://files.minecraftforge.net/net/minecraftforge/forge/\nNeoForge: https://neoforged.net/\n混合端: Cardboard: https://cardboardpowered.org/\nArclight: https://github.com/IzzelAliz/Arclight\nTaiyitist: https://github.com/TaiyitistMC/Taiyitist\nMohist: https://mohistmc.com/\nCatserver: https://catmc.org/\nSponge: https://spongepowered.org/\n","date":"2025-09-16T00:00:00Z","image":"https://pmckks.github.io/pmckk/p/mc-sever-build-1/OIP-C_hu_66317712e106a080.png","permalink":"https://pmckks.github.io/pmckk/p/mc-sever-build-1/","title":"MC服务器搭建指南-1"},{"content":"1. MC常见的服务端类型: 纯净端:\n纯净端一般指是无任何额外内容,没有插件以及模组,原生态的服务器。\n插件端:\n插件端一般指是在原版基础内容上仅有附加的插件功能,一般为.jar格式,存放目录一般为/server/plugins\n模组端:\n模组端相较于以上两个功能更为强大,一般这种服务端是基于整合包创建,存放目录为:/server/mods。\n混合端:\n相比模组端和纯净端,功能更加强大,缺点是仅forge混合比较完善,fabric虽然也有但是不稳定,经常容易报错\n","date":"2025-09-09T00:00:00Z","image":"https://pmckks.github.io/pmckk/p/mc-sever-core/background_hu_621750104242c5f9.jpg","permalink":"https://pmckks.github.io/pmckk/p/mc-sever-core/","title":"MC服务器核心知识"}]