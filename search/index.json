[{"content":"了解服务端文件架构 注:群组服会单独拉出来讲.\n1 2 3 4 5 6 7 8 9 └── /server ├── .server core(名字一般为核心名如.fabric .mohist等) ├──library(资源文件,此文件特殊,一般启动的时候会下载) ├──config(配置文件) ├──log(日志文件) ├──world(存档文件夹) ├──eula(用户协议:一般生成后需要把内容改为eula:true) ├──server.properties.Properties(服务器配置文件，其他核心会有bukkit spigot等) └──server.jar(服务核心文件,要是没这个就别玩了孩子) 构建服务端 下载服务器核心: 纯净端:\nMinecraft: 下载\n插件端:\nPaper: 下载\nPurpur: 下载\nLeaves: 下载\nLeaf: 下载\nPandaSpigot: 下载\nSportPaper: 下载\nCraftBukkit: 下载\nSpigot: 下载\n模组端(我们师徒三人):\nFabric: 下载\nForge: 下载\nNeoForge: 下载\n混合端:\nCardboard: 下载\nArclight: 下载\nTaiyitist: 下载\nMohist: 下载\nCatserver: 下载\nSponge: 下载\n构建服务端: 首先把下载好的服务器核心文件放到任意文件夹内,这里以server为例:\n1 2 /server └──server.jar 此时执行以下命令(windows可以在本地新建文本粘贴以下内容保存将后缀改完.bat)：\n1 java -jar server.jar nogui 以下是代码解析(照顾新人):\n1 2 3 4 5 6 7 8 9 java -jar server.jar nogui ├ ├ ├ ├ ├ ├ ├ ├──关闭MOJANG自带的控制台 ├ ├ ├ ├ ├ └──服务器核心文件名 ├ ├ ├ └──执行jar文件 ├ └──调用java 启动脚本以及优化参数: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 -XX:+UseZGC ^ -XX:+ZGenerational ^ -XX:+AlwaysPreTouch ^ -XX:+UnlockExperimentalVMOptions ^ -XX:+UnlockDiagnosticVMOptions ^ -XX:+UseNUMA ^ -XX:+ZUncommit ^ -XX:+ZProactive ^ -XX:ZUncommitDelay=300 ^ -XX:SoftMaxHeapSize=16G ^ -XX:+ParallelRefProcEnabled ^ -XX:GCTimeRatio=90 ^ -XX:InitiatingHeapOccupancyPercent=20 ^ -XX:+PerfDisableSharedMem ^ -XX:+OmitStackTraceInFastThrow ^ -XX:+AlwaysActAsServerClassMachine ^ -Dcom.mojang.eula.agree=true ^ -Djava.net.preferIPv4Stack=true ^ ","date":"2025-09-16T00:00:00Z","image":"https://pmckks.github.io/pmckk/p/mc-sever-build-1/OIP-C_hu_66317712e106a080.png","permalink":"https://pmckks.github.io/pmckk/p/mc-sever-build-1/","title":"MC服务器搭建指南-1"},{"content":"1. MC常见的服务端类型: 纯净端:\n纯净端一般指是无任何额外内容,没有插件以及模组,原生态的服务器。\n插件端:\n插件端一般指是在原版基础内容上仅有附加的插件功能,一般为.jar格式,存放目录一般为/server/plugins\n模组端:\n模组端相较于以上两个功能更为强大,一般这种服务端是基于整合包创建,存放目录为:/server/mods。\n混合端:\n相比模组端和纯净端,功能更加强大,缺点是仅forge混合比较完善,fabric虽然也有但是不稳定,经常容易报错\n","date":"2025-09-09T00:00:00Z","image":"https://pmckks.github.io/pmckk/p/mc-sever-core/background_hu_621750104242c5f9.jpg","permalink":"https://pmckks.github.io/pmckk/p/mc-sever-core/","title":"MC服务器核心知识"}]